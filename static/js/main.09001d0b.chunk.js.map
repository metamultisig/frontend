{"version":3,"sources":["MultisigWatcher.tsx","fields/Bytes32Field.tsx","fields/IntField.tsx","fields/AddressField.tsx","fields/StringField.tsx","fields/BytesField.tsx","fields/ABIField.tsx","FunctionABIEntry.tsx","MultisigTransactionCreator.tsx","MultisigInterface.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["MultisigWatcher","provider","_this","this","Object","classCallCheck","event","ownersWatched","walletsWatched","wallets","addOwnerWatch","address","onChange","getAddress","getLogs","fromBlock","toBlock","topics","encodeTopics","then","processKeyholderChanges","removeOwnerWatch","addMultisigWatch","removeMultisigWatch","logs","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","log","value","walletAddress","wallet","keyholders","decoded","decode","data","keyholderAddress","keyholder","weight","toNumber","getOwnedWallets","err","return","owner","owned","_i","_Object$keys","keys","length","walletAddr","multisigInterface","ethers","utils","Interface","Array","from","multisigABI","events","bytes32_re","Bytes32Field","props","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","target","test","_this$props","label","classes","react_default","a","createElement","TextField_default","className","textField","error","replace","InputProps","startAdornment","InputAdornment_default","position","placeholder","Component","withStyles","theme","createStyles","marginLeft","spacing","unit","marginRight","int_re","uint_re","signed","trim","bigNumberify","type","toString","address_re","AddressField","timerId","tryResolveName","state","valid","includes","endsWith","setTimeout","e","clearTimeout","setState","resolveName","addr","StringField","BytesField","Uint8Array","TextEncoder","encode","decodedValue","TextDecoder","FormControl_default","formControl","InputLabel_default","htmlFor","Input_default","id","ABIField","fields_Bytes32Field","IntField","fields_AddressField","fields_BytesField","fields_StringField","FunctionABIEntry","fields","abi","inputs","fill","onSubmit","map","field","_this2","input","idx","fields_ABIField","key","name","Button_default","variant","button","color","disabled","reduce","acc","cur","onClick","margin","MultisigTransactionCreator","onNewTxClick","showTxTypeDialog","onNewTxClose","onAddKeyholderClick","showAddKeyholderDialog","onAddKeyholderClose","onSetThresholdClick","showSetThresholdDialog","onSetThresholdClose","onAddKeyholder","_ref","asyncToGenerator","regenerator_default","mark","_callee","args","descriptor","encoded","nonce","tx","wrap","_context","prev","contract","interface","functions","nextNonce","sent","submit","lastTxId","hash","stop","_x","apply","arguments","onSetThreshold","closeTxSnackbar","reason","Fragment","Dialog_default","open","onClose","aria-labelledby","DialogTitle_default","List_default","ListItem_default","ListItemIcon_default","PersonAdd_default","ListItemText_default","primary","Timelapse_default","DialogContent_default","src_FunctionABIEntry","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","message","Link_default","href","Fab_default","aria-label","fab","Add_default","bottom","right","MultisigInterface","watcher","balance","threshold","Contract","getSigner","getBalance","TableRow_default","TableCell_default","weights","src_MultisigTransactionCreator","Typography_default","Paper_default","paper","Grid_default","container","grid","item","xs","formatEther","Table_default","table","TableHead_default","TableBody_default","padding","marginBottom","minwidth","App","onWalletListChange","_callee2","walletList","_context2","Promise","all","_ref2","title","lookupAddress","slice","abrupt","_x2","onWalletClick","selectedWallet","handleDrawerToggle","mobileOpen","providers","Web3Provider","ethereum","enable","addresses","multisigs","AccountBalanceWallet_default","drawer","toolbar","Divider_default","AddBox_default","body","paragraph","src_MultisigInterface","root","CssBaseline_default","AppBar_default","appBar","Toolbar_default","IconButton_default","menuButton","Menu_default","noWrap","Hidden_default","smUp","implementation","Drawer_default","anchor","direction","drawerPaper","xsDown","content","display","defineProperty","breakpoints","up","width","flexShrink","concat","mixins","flexGrow","withTheme","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.09001d0b.chunk.js","sourcesContent":["import { ethers } from 'ethers';\nimport { getAddress } from 'ethers/utils';\nimport { abi as multisigABI } from '@metamultisig/contract/build/contracts/MetaMultisig.json';\n\ninterface WeightMap {\n  [key: string]: number;\n}\n\ninterface WalletInfo {\n  keyholders: WeightMap;\n}\n\nclass MultisigWatcher {\n  provider: ethers.providers.JsonRpcProvider;\n  event: ethers.utils.EventDescription;\n  ownersWatched: {[key: string]: (weights: WeightMap) => any};\n  walletsWatched: {[key: string]: (weights: WeightMap) => any};\n  wallets: {[key: string]: WalletInfo};\n\n  constructor(provider: ethers.providers.JsonRpcProvider) {\n    this.provider = provider;\n    this.ownersWatched = {};\n    this.walletsWatched = {};\n    this.wallets = {};\n\n    const multisigInterface = new ethers.utils.Interface(Array.from(multisigABI));\n    this.event = multisigInterface.events['KeyholderChanged'];\n  }\n\n  addOwnerWatch = (address: string, onChange: (weights: WeightMap) => any) => {\n    this.ownersWatched[getAddress(address)] = onChange;\n    this.provider.getLogs({\n      fromBlock: 5473234,\n      toBlock: 'latest',\n      topics: this.event.encodeTopics([address]),\n    }).then(this.processKeyholderChanges);\n  }\n\n  removeOwnerWatch = (address: string) => {\n    delete this.ownersWatched[getAddress(address)];\n  }\n\n  addMultisigWatch = (address: string, onChange: (weights: WeightMap) => any) => {\n    this.walletsWatched[getAddress(address)] = onChange;\n    this.provider.getLogs({\n      fromBlock: 5473234,\n      toBlock: 'latest',\n      topics: this.event.encodeTopics([]),\n      address: address,\n    }).then(this.processKeyholderChanges);\n  }\n\n  removeMultisigWatch = (address: string) => {\n    delete this.ownersWatched[getAddress(address)];\n  }\n\n  processKeyholderChanges = (logs: Array<ethers.providers.Log>) => {\n    for(let log of logs) {\n      const walletAddress = getAddress(log.address);\n      let wallet = this.wallets[walletAddress];\n      if(wallet === undefined) {\n        wallet = this.wallets[walletAddress] = {keyholders: {}};\n      }\n\n      const decoded = this.event.decode(log.data, log.topics);\n      const keyholderAddress = getAddress(decoded.keyholder);\n      if(decoded.weight.toNumber() == 0) {\n        delete wallet.keyholders[keyholderAddress];\n      } else {\n        wallet.keyholders[keyholderAddress] = decoded.weight.toNumber();\n      }\n\n      if(this.walletsWatched[walletAddress]) {\n        this.walletsWatched[walletAddress](wallet.keyholders);\n      }\n      if(this.ownersWatched[keyholderAddress]) {\n        this.ownersWatched[keyholderAddress](this.getOwnedWallets(keyholderAddress));\n      }\n    }\n  }\n\n  getOwnedWallets = (owner: string) => {\n    const owned: WeightMap = {};\n    for(let walletAddr of Object.keys(this.wallets)) {\n      const wallet = this.wallets[walletAddr];\n      if(wallet.keyholders[owner] !== undefined) {\n        owned[walletAddr] = wallet.keyholders[owner];\n      }\n    }\n    return owned;\n  }\n}\n\nexport default MultisigWatcher;\n","import React, { Component } from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nconst bytes32_re = /^0x[0-9a-fA-f]{64}$/;\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n    },\n  });\n\ninterface Props extends WithStyles<typeof styles> {\n  label: string;\n  value?: string;\n  onChange?: (value: string, valid: boolean) => any;\n}\n\nclass Bytes32Field extends Component<Props, {}> {\n  constructor(props: Props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    if(this.props.onChange) {\n      const value = \"0x\" + event.target.value\n      this.props.onChange(value, bytes32_re.test(value));\n    }\n  }\n\n  render() {\n    const { label, classes } = this.props;\n    return <TextField\n      label={label}\n      className={classes.textField}\n      onChange={this.onChange}\n      error={!bytes32_re.test(this.props.value || '')}\n      value={(this.props.value || '').replace(/^0x/, '')}\n      InputProps={{\n        startAdornment: <InputAdornment position=\"start\">0x</InputAdornment>,\n      }}\n      placeholder=\"(32 bytes)\"\n    />\n  }\n};\n\nexport default withStyles(styles)(Bytes32Field);\n","import { BigNumber, bigNumberify } from 'ethers/utils';\nimport React, { Component } from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst int_re = /^[1-9][0-9]*$/\nconst uint_re = /^-?[1-9][0-9]*$/\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n    },\n  });\n\ninterface Props extends WithStyles<typeof styles> {\n  label: string;\n  value?: BigNumber;\n  signed: boolean;\n  onChange?: (value: BigNumber|undefined, valid: boolean) => any;\n}\n\nclass Bytes32Field extends Component<Props, {}> {\n  constructor(props: Props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    if(this.props.onChange) {\n      const value = event.target.value;\n      const valid = this.props.signed?uint_re.test(value):int_re.test(value);\n      if(!valid && value.trim() == '') {\n        this.props.onChange(undefined, true);\n      } else {\n        this.props.onChange(bigNumberify(value), true);\n      }\n    }\n  }\n\n  render() {\n    const { label, value, classes } = this.props;\n    return <TextField\n      label={label}\n      className={classes.textField}\n      onChange={this.onChange}\n      type=\"number\"\n      value={value == null?'':value.toString()}\n      error={value == null}\n      placeholder={this.props.signed?'(Integer)':'(Unsigned Integer)'}\n    />\n  }\n};\n\nexport default withStyles(styles)(Bytes32Field);\n","import { ethers } from 'ethers';\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\n\ninterface Props {\n  provider: ethers.providers.Provider;\n  label: string;\n  value?: string;\n  onChange?: (value: string, valid: boolean, name?: string) => any;\n}\n\nconst address_re = /^0x[0-9a-fA-F]{40}$/;\n\nclass AddressField extends Component<Props, {value: string, valid: boolean}> {\n  private timerId?: ReturnType<typeof setTimeout>;\n\n  constructor(props : Props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n    this.tryResolveName = this.tryResolveName.bind(this);\n    this.state = {\n      value: props.value || '',\n      valid: props.value !== undefined && address_re.test(props.value),\n    }\n\n    if(props.value && props.value.includes('.') && !props.value.endsWith('.')) {\n      this.timerId = setTimeout(this.tryResolveName, 200);\n    }\n  }\n\n  onChange(e: React.ChangeEvent<HTMLInputElement>) {\n    if(!e.target.value) return;\n\n    const value = e.target.value;\n    const valid = address_re.test(e.target.value);\n\n    if(this.props.onChange) {\n      this.props.onChange(value, valid);\n    }\n\n    if(value.includes('.') && !value.endsWith('.')) {\n      if(this.timerId) {\n        clearTimeout(this.timerId);\n        this.timerId = undefined;\n      }\n      this.timerId = setTimeout(this.tryResolveName, 200);\n    }\n\n    this.setState({\n      value: value,\n      valid: valid,\n    });\n  }\n\n  async tryResolveName() {\n    const addr = await this.props.provider.resolveName(this.state.value);\n    if(addr) {\n      this.setState({\n        valid: true,\n      });\n      if(this.props.onChange) {\n        this.props.onChange(addr, true, this.state.value);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if(this.timerId) {\n      clearTimeout(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <TextField\n        onChange={this.onChange}\n        label={this.props.label}\n        value={this.state.value}\n        error={!this.state.valid}\n        placeholder=\"name.eth or 0x...\"\n      />\n    );\n  }\n};\n\nexport default AddressField;\n","import React, { Component } from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n    },\n  });\n\ninterface Props extends WithStyles<typeof styles> {\n  label: string;\n  value?: string;\n  onChange?: (value: string, valid: boolean) => any;\n}\n\nclass StringField extends Component<Props, {}> {\n  constructor(props: Props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    if(this.props.onChange) {\n      this.props.onChange(event.target.value, true);\n    }\n  }\n\n  render() {\n    const { label, value, classes } = this.props;\n    return <TextField\n      label={label}\n      className={classes.textField}\n      placeholder=\"(String)\"\n      onChange={this.onChange}\n      value={value || ''}\n    />\n  }\n};\n\nexport default withStyles(styles)(StringField);\n","import React, { Component } from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    formControl: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n    },\n  });\n\ninterface Props extends WithStyles<typeof styles> {\n  label: string;\n  value?: Uint8Array;\n  onChange?: (value: Uint8Array, valid: boolean) => any;\n}\n\nclass BytesField extends Component<Props, {}> {\n  constructor(props: Props) {\n    super(props);\n    // Hack to set valid to true.\n    if(props.onChange) {\n      props.onChange(props.value || new Uint8Array(), true);\n    }\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    if(this.props.onChange) {\n      this.props.onChange(new TextEncoder().encode(event.target.value), true);\n    }\n  }\n\n  render() {\n    const { label, value, classes } = this.props;\n    const decodedValue = (value == null)?'':new TextDecoder().decode(value);\n    return <FormControl className={classes.formControl}>\n      <InputLabel htmlFor=\"component-simple\">{label}</InputLabel>\n      <Input id=\"component-simple\" placeholder=\"(Bytes)\" onChange={this.onChange} value={decodedValue} />\n    </FormControl>\n  }\n};\n\nexport default withStyles(styles)(BytesField);\n","import { ethers } from 'ethers';\nimport { BigNumber } from 'ethers/utils';\nimport React, { Component } from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Bytes32Field from './Bytes32Field';\nimport IntField from './IntField';\nimport AddressField from './AddressField';\nimport StringField from './StringField';\nimport BytesField from './BytesField';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n    },\n  });\n\ntype FieldValue = string|Uint8Array|BigNumber|undefined;\n\ninterface Props extends WithStyles<typeof styles> {\n  provider: ethers.providers.Provider;\n  label: string;\n  type: string;\n  value?: FieldValue;\n  onChange?: (value: FieldValue, valid: boolean) => any;\n}\n\ninterface State {\n}\n\nclass ABIField extends Component<Props, State> {\n  render() {\n    const { provider, label, type, value, onChange, classes } = this.props;\n    switch(type) {\n    case 'bytes32':\n      return <Bytes32Field label={label} onChange={onChange} value={value as string|undefined} />\n    case 'uint256':\n      return <IntField label={label} signed={true} onChange={onChange} value={value as BigNumber|undefined} />\n    case 'int256':\n      return <IntField label={label} signed={false} onChange={onChange} value={value as BigNumber|undefined} />\n    case 'address':\n      return <AddressField label={label} provider={provider} onChange={onChange} value={value as string|undefined} />\n    case 'bytes':\n      return <BytesField label={label} onChange={onChange} value={value as Uint8Array|undefined} />\n    case 'string':\n      return <StringField label={label} onChange={onChange} value={value as string|undefined} />\n    default:\n      return <span>Unsupported type {type} for {label}</span>\n    }\n  }\n};\n\nexport default withStyles(styles)(ABIField);\n","import { ethers } from 'ethers';\nimport { BigNumber } from 'ethers/utils';\nimport React, { Component } from 'react';\nimport { FunctionDescription } from 'ethers/utils';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport ABIField from './fields/ABIField';\nimport Button from '@material-ui/core/Button';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n    },\n    button: {\n      margin: theme.spacing.unit,\n    },\n  });\n\ninterface Props extends WithStyles<typeof styles> {\n  provider: ethers.providers.Provider;\n  abi: FunctionDescription;\n  onSubmit?: (args: Array<FieldValue>) => any;\n}\n\ntype FieldValue = string|Uint8Array|BigNumber|undefined;\n\ninterface State {\n  fields: Array<{value?: FieldValue, valid: boolean}>;\n}\n\nclass FunctionABIEntry extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      fields: Array(props.abi.inputs.length).fill({value: null, valid: false}),\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(id: number, value: FieldValue, valid: boolean) {\n    const fields = this.state.fields;\n    fields[id] = {value: value, valid: valid};\n    this.setState({\n      fields: fields,\n    });\n  }\n\n  onSubmit(e: React.MouseEvent<HTMLElement, MouseEvent>) {\n    if(this.props.onSubmit) {\n      this.props.onSubmit(this.state.fields.map(field => field.value));\n    }\n  }\n\n  render() {\n    const { abi, classes, provider } = this.props;\n    const inputs = abi.inputs.map((input, idx) => {\n      return <ABIField provider={provider} key={input.name} label={input.name as string} type={input.type as string} value={this.state.fields[idx].value} onChange={(value, valid) => this.onChange(idx, value, valid)} />\n    });\n    return <div>\n      {inputs}\n      <Button\n        variant=\"contained\"\n        className={classes.button}\n        color=\"primary\"\n        disabled={!this.state.fields.reduce((acc, cur) => acc && cur.valid, true)}\n        onClick={this.onSubmit}>\n        Submit\n      </Button>\n    </div>;\n  }\n};\n\nexport default withStyles(styles)(FunctionABIEntry);\n","import { ethers } from 'ethers';\nimport { BigNumber } from 'ethers/utils';\nimport React, { Component } from 'react';\nimport { FunctionFragment } from 'ethers/utils/abi-coder';\nimport { abi as multisigABI } from '@metamultisig/contract/build/contracts/MetaMultisig.json';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport TimelapseIcon from '@material-ui/icons/Timelapse';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Fab from '@material-ui/core/Fab';\nimport Icon from '@material-ui/core/Icon';\nimport Link from '@material-ui/core/Link';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport MultisigWatcher from './MultisigWatcher';\nimport FunctionABIEntry from './FunctionABIEntry';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    fab: {\n      margin: theme.spacing.unit,\n      position: 'absolute',\n      bottom: theme.spacing.unit * 2,\n      right: theme.spacing.unit * 2,\n    }\n  });\n\ninterface Props extends WithStyles<typeof styles> {\n  provider: ethers.providers.JsonRpcProvider;\n  contract: ethers.Contract;\n}\n\ninterface State {\n  showTxTypeDialog: boolean;\n  showAddKeyholderDialog: boolean;\n  showSetThresholdDialog: boolean;\n  lastTxId?: string;\n}\n\ntype FieldValue = string|Uint8Array|BigNumber|undefined;\n\nclass MultisigTransactionCreator extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      showTxTypeDialog: false,\n      showAddKeyholderDialog: false,\n      showSetThresholdDialog: false,\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillUnmount() {\n  }\n\n  onNewTxClick = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    this.setState({\n      showTxTypeDialog: true,\n    });\n  }\n\n  onNewTxClose = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    this.setState({\n      showTxTypeDialog: false,\n    });\n  }\n\n  onAddKeyholderClick = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    this.setState({\n      showTxTypeDialog: false,\n      showAddKeyholderDialog: true,\n    });\n  }\n\n  onAddKeyholderClose = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    this.setState({\n      showAddKeyholderDialog: false,\n    });\n  }\n\n  onSetThresholdClick = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    this.setState({\n      showTxTypeDialog: false,\n      showSetThresholdDialog: true,\n    });\n  }\n\n  onSetThresholdClose = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    this.setState({\n      showSetThresholdDialog: false,\n    });\n  }\n\n  onAddKeyholder = async (args: Array<FieldValue>) => {\n    this.setState({\n      showAddKeyholderDialog: false,\n    });\n\n    const descriptor = this.props.contract.interface.functions['setKeyholderWeight'];\n    const encoded = descriptor.encode(args);\n    var nonce = await this.props.contract.nextNonce();\n    var tx = await this.props.contract.submit(\n      this.props.contract.address,\n      0,\n      encoded,\n      nonce,\n      []\n    );\n    this.setState({\n      lastTxId: tx.hash,\n    });\n  }\n\n  onSetThreshold = (args: Array<FieldValue>) => {\n  }\n\n  closeTxSnackbar = (e: React.SyntheticEvent<any, Event>, reason: string) => {\n    if(reason == 'clickaway') {\n      return;\n    }\n\n    this.setState({\n      lastTxId: undefined,\n    });\n  }\n\n  render() {\n    const { classes, contract } = this.props;\n    return (\n      <>\n        <Dialog open={this.state.showTxTypeDialog} onClose={this.onNewTxClose} aria-labelledby=\"txtype-title\">\n          <DialogTitle id=\"txtype-title\">Select Transaction Type</DialogTitle>\n          <div>\n            <List>\n              <ListItem button onClick={this.onAddKeyholderClick} key=\"addKeyholder\">\n                <ListItemIcon><PersonAddIcon /></ListItemIcon>\n                <ListItemText primary=\"Add Keyholder\" />\n              </ListItem>\n              <ListItem button onClick={this.onSetThresholdClick} key=\"setThreshold\">\n                <ListItemIcon><TimelapseIcon /></ListItemIcon>\n                <ListItemText primary=\"Set Signing Threshold\" />\n              </ListItem>\n            </List>\n          </div>\n        </Dialog>\n\n        <Dialog open={this.state.showAddKeyholderDialog} onClose={this.onAddKeyholderClose} aria-labelledby=\"addkeyholder-title\">\n          <DialogTitle id=\"addkeyholder-title\">Add a Keyholder</DialogTitle>\n          <DialogContent>\n            <FunctionABIEntry\n              provider={this.props.provider}\n              abi={contract.interface.functions['setKeyholderWeight']}\n              onSubmit={this.onAddKeyholder} />\n          </DialogContent>\n        </Dialog>\n\n        <Dialog open={this.state.showSetThresholdDialog} onClose={this.onSetThresholdClose} aria-labelledby=\"setthreshold-title\">\n          <DialogTitle id=\"setthreshold-title\">Set Signing Threshold</DialogTitle>\n          <DialogContent>\n            <FunctionABIEntry\n              provider={this.props.provider}\n              abi={contract.interface.functions['setThreshold']}\n              onSubmit={this.onSetThreshold} />\n          </DialogContent>\n        </Dialog>\n\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.lastTxId !== undefined}\n          autoHideDuration={6000}\n          onClose={this.closeTxSnackbar}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">Transaction <Link href={\"https://etherscan.io/tx/\" + this.state.lastTxId}>{this.state.lastTxId}</Link> sent</span>}\n        />\n\n        <Fab color=\"primary\" onClick={this.onNewTxClick} aria-label=\"New Transaction\" className={classes.fab}>\n          <AddIcon />\n        </Fab>\n      </>\n    );\n  }\n};\n\nexport default withStyles(styles)(MultisigTransactionCreator);\n","import { ethers } from 'ethers';\nimport { BigNumber } from 'ethers/utils';\nimport React, { Component } from 'react';\nimport { FunctionFragment } from 'ethers/utils/abi-coder';\nimport { abi as multisigABI } from '@metamultisig/contract/build/contracts/MetaMultisig.json';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Typography from '@material-ui/core/Typography';\n\nimport MultisigWatcher from './MultisigWatcher';\nimport MultisigTransactionCreator from './MultisigTransactionCreator';\nimport FunctionABIEntry from './FunctionABIEntry';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n    },\n    button: {\n      margin: theme.spacing.unit,\n    },\n    paper: {\n      padding: theme.spacing.unit,\n      margin: theme.spacing.unit,\n      marginBottom: 3 * theme.spacing.unit,\n    },\n    grid: {\n      padding: 2 * theme.spacing.unit,\n    },\n    table: {\n      minwidth: 700,\n    },\n  });\n\ninterface WalletInfo {\n  title: string;\n  address: string;\n  weight: number;\n}\n\ninterface Props extends WithStyles<typeof styles> {\n  provider: ethers.providers.JsonRpcProvider;\n  wallet: WalletInfo;\n}\n\ninterface State {\n  balance: ethers.utils.BigNumber|null;\n  threshold: number|null;\n  keyholders: {[key: string]: number}|null;\n  showTxTypeDialog: boolean;\n  showAddKeyholderDialog: boolean;\n  showSetThresholdDialog: boolean;\n}\n\nclass MultisigInterface extends Component<Props, State> {\n  watcher: MultisigWatcher;\n  contract: ethers.Contract;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      balance: null,\n      threshold: null,\n      keyholders: null,\n      showTxTypeDialog: false,\n      showAddKeyholderDialog: false,\n      showSetThresholdDialog: false,\n    };\n\n    this.watcher = new MultisigWatcher(this.props.provider);\n    this.contract = new ethers.Contract(this.props.wallet.address, Array.from(multisigABI), this.props.provider.getSigner());\n  }\n\n  componentDidMount() {\n    this.props.provider.getBalance(this.props.wallet.address).then(((balance:ethers.utils.BigNumber) => {\n      this.setState({\n        balance: balance,\n      })\n    }));\n\n    this.watcher.addMultisigWatch(this.props.wallet.address, ((keyholders: {[key: string]: number}) => {\n      this.setState({\n        keyholders: keyholders,\n      })\n    }));\n\n    this.contract.threshold().then((threshold:ethers.utils.BigNumber) => {\n      this.setState({\n        threshold: threshold.toNumber(),\n      });\n    })\n  }\n\n  componentWillUnmount() {\n    this.watcher.removeMultisigWatch(this.props.wallet.address);\n  }\n\n  render() {\n    const { classes, wallet } = this.props;\n\n    let keyholders = [(\n      <TableRow key=\"loading\">\n        <TableCell>Loading...</TableCell>\n        <TableCell></TableCell>\n      </TableRow>\n    )];\n    if(this.state.keyholders !== null) {\n      const weights = this.state.keyholders;\n      keyholders = Object.keys(weights).map((addr) => (\n          <TableRow key={addr}>\n            <TableCell>{addr}</TableCell>\n            <TableCell>{weights[addr]}</TableCell>\n          </TableRow>\n        )\n      );\n    }\n\n    return (\n      <>\n        <MultisigTransactionCreator provider={this.props.provider} contract={this.contract} />\n\n        <Typography variant=\"h6\">Overview</Typography>\n        <Paper className={classes.paper}>\n          <Grid container spacing={24} className={classes.grid}>\n            <Grid item xs={6}>\n              <Typography>Address</Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography>\n                <Link href={\"https://etherscan.io/address/\" + this.props.wallet.address}>\n                  {this.props.wallet.address}\n                </Link>\n              </Typography>\n            </Grid>\n\n            <Grid item xs={6}>\n              <Typography>Balance</Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography>{this.state.balance == null ? \"Loading\" : ethers.utils.formatEther(this.state.balance) + \" ether\"}</Typography>\n            </Grid>\n\n            <Grid item xs={6}>\n              <Typography>Signing Threshold</Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography>{this.state.threshold == null ? \"Loading\" : this.state.threshold}</Typography>\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <Typography variant=\"h6\">Keyholders</Typography>\n        <Paper className={classes.paper}>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                <TableCell>Address</TableCell>\n                <TableCell>Weight</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {keyholders}\n            </TableBody>\n          </Table>\n        </Paper>\n      </>\n    );\n  }\n};\n\nexport default withStyles(styles)(MultisigInterface);\n","import { ethers } from 'ethers';\nimport { BigNumber } from 'ethers/utils';\nimport { EventFragment, FunctionFragment } from 'ethers/utils/abi-coder';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport logo from './logo.svg';\nimport './App.css';\n// import AddressField from './fields/AddressField';\n// import ABIPicker from './ABIPicker';\n// import ABIFetcher from './ABIFetcher';\nimport MultisigWatcher from './MultisigWatcher';\nimport MultisigInterface from './MultisigInterface';\n\ninterface Ethereum extends ethers.providers.AsyncSendable {\n  enable: () => any;\n}\n\ndeclare var ethereum: Ethereum;\n\nconst drawerWidth = 240;\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    drawer: {\n      [theme.breakpoints.up('sm')]: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n    },\n    appBar: {\n      marginLeft: drawerWidth,\n      [theme.breakpoints.up('sm')]: {\n        width: `calc(100% - ${drawerWidth}px)`,\n      },\n    },\n    menuButton: {\n      marginRight: 20,\n      [theme.breakpoints.up('sm')]: {\n        display: 'none',\n      },\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing.unit * 3,\n    },\n  });\n\ntype FieldValue = string|Uint8Array|BigNumber|null;\n\ninterface WalletInfo {\n  title: string;\n  address: string;\n  weight: number;\n}\n\ninterface State {\n  // abi: Array<EventFragment | FunctionFragment>;\n  // contractAddress: string;\n  mobileOpen: boolean;\n  wallets: Array<WalletInfo>|null;\n  selectedWallet: WalletInfo|null;\n}\n\ninterface Props extends WithStyles<typeof styles, true> {}\n\nclass App extends Component<Props, State> {\n  provider: ethers.providers.JsonRpcProvider;\n  watcher: MultisigWatcher;\n  address?: string;\n  // abiFetcher: ABIFetcher;\n\n  constructor(props: Props) {\n      super(props)\n      this.provider = new ethers.providers.Web3Provider(ethereum);\n      // this.abiFetcher = new ABIFetcher(this.provider);\n      // this.onAddressChange = this.onAddressChange.bind(this);\n      // this.onSubmit = this.onSubmit.bind(this);\n      this.state = {\n        mobileOpen: false,\n        wallets: null,\n        selectedWallet: null,\n        // abi: [],\n        // contractAddress: '',\n      };\n      this.watcher = new MultisigWatcher(this.provider);\n  }\n\n  async componentDidMount() {\n    const addresses = await ethereum.enable();\n    if(addresses.length > 0) {\n      this.watcher.addOwnerWatch(addresses[0], this.onWalletListChange);\n    }\n  }\n\n  componentWillUnmount() {\n    if(this.address) {\n      this.watcher.removeOwnerWatch(this.address);\n    }\n  }\n\n  onWalletListChange = async (wallets: {[key: string]: number}) => {\n    const provider = this.provider;\n    const walletList = await Promise.all(Object.keys(wallets).map(async (wallet) => {\n      let title = await provider.lookupAddress(wallet);\n      if(title == null) {\n        title = wallet.slice(0, 6) + \"…\" + wallet.slice(wallet.length - 4);\n      }\n      return {title: title, address: wallet, weight: wallets[wallet]};\n    }));\n    this.setState({\n      wallets: walletList,\n    });\n  }\n\n  onWalletClick = (wallet: WalletInfo) => (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    this.setState({\n      selectedWallet: wallet,\n    })\n  }\n\n  // async onAddressChange(value: string, valid: boolean, addr: string) {\n  //   if(valid) {\n  //     const abi = await this.abiFetcher.fetch(addr, value);\n  //     this.setState({\n  //       abi: abi,\n  //       contractAddress: value,\n  //     });\n  //   } else {\n  //     this.setState({\n  //       contractAddress: value,\n  //     });\n  //   }\n  // }\n  //\n  // async onSubmit(abi: FunctionFragment, args: Array<FieldValue>) {\n  //   await ethereum.enable();\n  //   const contract = new ethers.Contract(this.state.contractAddress, this.state.abi, this.provider)\n  //     .connect(this.provider.getSigner());\n  //   const tx = await contract[abi.name](...args);\n  //   console.log(tx.hash);\n  // }\n\n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  }\n\n  render() {\n    const { classes, theme } = this.props;\n\n    let multisigs = [(\n      <ListItem button disabled key=\"loading\">\n        <ListItemIcon><AccountBalanceWalletIcon /></ListItemIcon>\n        <ListItemText>Loading...</ListItemText>\n      </ListItem>\n    )];\n    if(this.state.wallets !== null) {\n      multisigs = this.state.wallets.map((wallet) => {\n        return (\n          <ListItem button key={wallet.address} onClick={this.onWalletClick(wallet)}>\n            <ListItemIcon><AccountBalanceWalletIcon /></ListItemIcon>\n            <ListItemText>{wallet.title}</ListItemText>\n          </ListItem>\n        );\n      });\n    }\n\n    const drawer = (\n      <div>\n        <div className={classes.toolbar} />\n        <Divider />\n        <List>\n          {multisigs}\n        </List>\n        {multisigs.length > 0 ? <Divider /> : ''}\n        <List>\n          <ListItem button key=\"new\">\n            <ListItemIcon><AddBoxIcon /></ListItemIcon>\n            <ListItemText>New Multisig</ListItemText>\n          </ListItem>\n        </List>\n      </div>\n    );\n\n    let body = (\n      <Typography paragraph>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n        incididunt ut labore et dolore magna aliqua. Rhoncus dolor purus non enim praesent\n        elementum facilisis leo vel. Risus at ultrices mi tempus imperdiet. Semper risus in\n        hendrerit gravida rutrum quisque non tellus. Convallis convallis tellus id interdum\n        velit laoreet id donec ultrices. Odio morbi quis commodo odio aenean sed adipiscing.\n        Amet nisl suscipit adipiscing bibendum est ultricies integer quis. Cursus euismod quis\n        viverra nibh cras. Metus vulputate eu scelerisque felis imperdiet proin fermentum leo.\n        Mauris commodo quis imperdiet massa tincidunt. Cras tincidunt lobortis feugiat vivamus\n        at augue. At augue eget arcu dictum varius duis at consectetur lorem. Velit sed\n        ullamcorper morbi tincidunt. Lorem donec massa sapien faucibus et molestie ac.\n      </Typography>\n    );\n    if(this.state.selectedWallet !== null) {\n      body = (\n        <MultisigInterface provider={this.provider} wallet={this.state.selectedWallet} />\n      );\n    }\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerToggle}\n              className={classes.menuButton}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              {this.state.selectedWallet == null ? \"Meta Multisig\" : \"Multisig \" + this.state.selectedWallet.title}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <nav className={classes.drawer}>\n          <Hidden smUp implementation=\"css\">\n            <Drawer\n              variant=\"temporary\"\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n              open={this.state.mobileOpen}\n              onClose={this.handleDrawerToggle}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n          <Hidden xsDown implementation=\"css\">\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          {body}\n        </main>\n      </div>\n    );\n    // return (\n    //   <div className=\"App\">\n    //     <AddressField label=\"Address\" provider={this.provider} onChange={this.onAddressChange} value={this.state.contractAddress} />\n    //     <ABIPicker const={false} provider={this.provider} abi={this.state.abi} onSubmit={this.onSubmit} />\n    //   </div>\n    // );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}